"""add expires_at to api_keys

Revision ID: 11b146a41b82
Revises: 8e65eb38b292
Create Date: 2025-03-10 21:11:14.122772

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '11b146a41b82'
down_revision = '8e65eb38b292'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Check if the column already exists
    conn = op.get_bind()
    result = conn.execute("SELECT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'api_keys' AND column_name = 'expires_at')")
    column_exists = result.scalar()
    
    if not column_exists:
        op.add_column('api_keys', sa.Column('expires_at', sa.DateTime(), nullable=True))

    # Check if indices already exist
    result = conn.execute("SELECT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = 'ix_api_keys_client_id')")
    if not result.scalar():
        op.create_index('ix_api_keys_client_id', 'api_keys', ['client_id'], unique=False, schema='public')
    
    result = conn.execute("SELECT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = 'ix_api_keys_key')")
    if not result.scalar():
        op.create_index('ix_api_keys_key', 'api_keys', ['key'], unique=False, schema='public')
    
    # Check if the column exists
    result = conn.execute("SELECT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'clients' AND column_name = 'user_id')")
    if not result.scalar():
        op.add_column('clients', sa.Column('user_id', sa.String(), nullable=True))
        # Set all existing clients to have a default user ID
        op.execute("UPDATE clients SET user_id = '00000000-0000-0000-0000-000000000000' WHERE user_id IS NULL")
        # Make the column not nullable
        op.alter_column('clients', 'user_id', nullable=False)

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('api_keys_client_id_fkey', 'api_keys', type_='foreignkey')
    op.create_foreign_key(None, 'api_keys', 'clients', ['client_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.alter_column('clients', 'phone',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
    op.alter_column('clients', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index('ix_clients_email', 'clients', ['email'], unique=False, schema='public')
    op.create_index('ix_clients_name', 'clients', ['name'], unique=False, schema='public')
    op.alter_column('exercises', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index('ix_exercises_workout_id', 'exercises', ['workout_id'], unique=False, schema='public')
    op.drop_constraint('exercises_workout_id_fkey', 'exercises', type_='foreignkey')
    op.create_foreign_key(None, 'exercises', 'workouts', ['workout_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.alter_column('workouts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index('ix_workouts_client_id', 'workouts', ['client_id'], unique=False, schema='public')
    op.create_index('ix_workouts_date', 'workouts', ['date'], unique=False, schema='public')
    op.drop_constraint('workouts_client_id_fkey', 'workouts', type_='foreignkey')
    op.create_foreign_key(None, 'workouts', 'clients', ['client_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'workouts', schema='public', type_='foreignkey')
    op.create_foreign_key('workouts_client_id_fkey', 'workouts', 'clients', ['client_id'], ['id'])
    op.drop_index('ix_workouts_date', table_name='workouts', schema='public')
    op.drop_index('ix_workouts_client_id', table_name='workouts', schema='public')
    op.alter_column('workouts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(None, 'exercises', schema='public', type_='foreignkey')
    op.create_foreign_key('exercises_workout_id_fkey', 'exercises', 'workouts', ['workout_id'], ['id'])
    op.drop_index('ix_exercises_workout_id', table_name='exercises', schema='public')
    op.alter_column('exercises', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_index('ix_clients_name', table_name='clients', schema='public')
    op.drop_index('ix_clients_email', table_name='clients', schema='public')
    op.alter_column('clients', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('clients', 'phone',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.drop_constraint(None, 'api_keys', schema='public', type_='foreignkey')
    op.create_foreign_key('api_keys_client_id_fkey', 'api_keys', 'clients', ['client_id'], ['id'])
    op.drop_index('ix_api_keys_key', table_name='api_keys', schema='public')
    op.drop_index('ix_api_keys_client_id', table_name='api_keys', schema='public')
    op.drop_column('api_keys', 'expires_at')
    # ### end Alembic commands ### 