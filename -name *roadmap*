[1mdiff --git a/backend/app/main.py b/backend/app/main.py[m
[1mindex 9f4a36b..cfec5f1 100644[m
[1m--- a/backend/app/main.py[m
[1m+++ b/backend/app/main.py[m
[36m@@ -21,7 +21,7 @@[m [mfrom app.auth_utils import get_api_key, validate_api_key, API_KEY_NAME[m
 [m
 # Import routers[m
 from app.routers import clients, workouts, intelligence, transformation, communication, analytics, coaching, content[m
[31m-from app.routers import ai_analysis, ocr[m
[32m+[m[32mfrom app.routers import ai_analysis, ocr, nutrition[m
 [m
 # Load environment variables[m
 load_dotenv()[m
[36m@@ -119,11 +119,11 @@[m [mdef custom_openapi():[m
         routes=app.routes,[m
     )[m
     [m
[31m-    # Fix API Key security scheme to ensure it works properly in Swagger UI[m
[32m+[m[32m    # Add security scheme for API key[m
     if "components" not in openapi_schema:[m
         openapi_schema["components"] = {}[m
         [m
[31m-    # Define the API Key security scheme - ensure proper configuration[m
[32m+[m[32m    # Define security scheme[m
     openapi_schema["components"]["securitySchemes"] = {[m
         API_KEY_NAME: {[m
             "type": "apiKey",[m
[36m@@ -133,13 +133,21 @@[m [mdef custom_openapi():[m
         }[m
     }[m
     [m
[32m+[m[32m    # Apply security to ALL operations explicitly[m
[32m+[m[32m    # This ensures every endpoint requires the API key[m
[32m+[m[32m    if "paths" in openapi_schema:[m
[32m+[m[32m        for path_key, path in openapi_schema["paths"].items():[m
[32m+[m[32m            for operation_key, operation in path.items():[m
[32m+[m[32m                if "security" not in operation:[m
[32m+[m[32m                    operation["security"] = [{API_KEY_NAME: []}][m
[32m+[m[41m    [m
[32m+[m[32m    # Also keep the global security definition[m
[32m+[m[32m    openapi_schema["security"] = [{API_KEY_NAME: []}][m
[32m+[m[41m    [m
     # Make sure the schemas section exists[m
     if "schemas" not in openapi_schema["components"]:[m
         openapi_schema["components"]["schemas"] = {}[m
     [m
[31m-    # Apply security to all routes[m
[31m-    openapi_schema["security"] = [{API_KEY_NAME: []}][m
[31m-    [m
     # Add custom schema info[m
     openapi_schema["info"]["contact"] = {[m
         "name": "Trainer's Memory Support",[m
[36m@@ -147,22 +155,35 @@[m [mdef custom_openapi():[m
         "url": "https://trainersmemory.api/support",[m
     }[m
     [m
[31m-    # Add usage examples and tips with markdown formatting (not HTML)[m
[32m+[m[32m    # Update API documentation with markdown formatting[m
     openapi_schema["info"]["description"] = """[m
[31m-    API for personal trainers to manage clients and workouts[m
[31m-[m
[31m-    AUTHENTICATION[m
[31m-    All endpoints require an API key to be provided in the 'X-API-Key' header.[m
[31m-[m
[31m-    TESTING WITH SWAGGER UI[m
[31m-    1. Click the "Authorize" button at the top[m
[31m-    2. Enter your API key exactly as-is (e.g., tmk_3db7baed7f1c40bb9e39b9c512fdcf8d)[m
[31m-    3. Click "Authorize" and then "Close"[m
[31m-    4. Now you can test the endpoints[m
[31m-[m
[31m-    TESTING WITH CURL[m
[31m-    curl -H "X-API-Key: YOUR_API_KEY" http://localhost:8000/api/v1/me[m
[31m-    """[m
[32m+[m[32m## API for personal trainers to manage clients and workouts[m
[32m+[m
[32m+[m[32m### Authentication[m
[32m+[m[32mAll endpoints require an API key to be provided in the `X-API-Key` header.[m
[32m+[m
[32m+[m[32m#### Testing with Swagger UI[m
[32m+[m[32m1. Click the "Authorize" button at the top[m
[32m+[m[32m2. Enter your API key **exactly as-is** (e.g., `tmk_40af9844458144dc9ba5f5859c8b0f01`)[m
[32m+[m[32m3. Click "Authorize" and then "Close"[m
[32m+[m[32m4. Now you can test the endpoints[m
[32m+[m
[32m+[m[32m#### Testing with cURL[m
[32m+[m[32m```bash[m
[32m+[m[32mcurl -H "X-API-Key: YOUR_API_KEY" http://localhost:8000/api/v1/me[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Available Endpoints[m
[32m+[m[32m- `/api/v1/clients` - Client management[m
[32m+[m[32m- `/api/v1/workouts` - Workout tracking and management[m
[32m+[m[32m- `/api/v1/intelligence` - AI-powered analytics and insights[m
[32m+[m[32m- `/api/v1/transformation` - Data transformation services[m
[32m+[m[32m- `/api/v1/communication` - Client communication tools[m
[32m+[m[32m- `/api/v1/analytics` - Business analytics[m
[32m+[m[32m- `/api/v1/coaching` - AI coaching assistance[m
[32m+[m[32m- `/api/v1/content` - Content generation[m
[32m+[m[32m- `/api/v1/nutrition` - Meal plans and nutrition analysis[m
[32m+[m[32m"""[m
     [m
     app.openapi_schema = openapi_schema[m
     return app.openapi_schema[m
[36m@@ -218,18 +239,10 @@[m [mapp.include_router([m
     tags=["Content"],[m
 )[m
 [m
[31m-# Add the AI Analysis router[m
[31m-app.include_router([m
[31m-    ai_analysis.router,[m
[31m-    prefix=f"/api/{API_VERSION}",[m
[31m-    tags=["Intelligence"],[m
[31m-)[m
[31m-[m
[31m-# Add the OCR router[m
 app.include_router([m
[31m-    ocr.router,[m
[31m-    prefix=f"/api/{API_VERSION}",[m
[31m-    tags=["Transformation"],[m
[32m+[m[32m    nutrition.router,[m
[32m+[m[32m    prefix=f"/api/{API_VERSION}/nutrition",[m
[32m+[m[32m    tags=["Nutrition"],[m
 )[m
 [m
 # Entry point[m
